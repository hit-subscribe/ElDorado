@model ElDorado.Gui.ViewModels.BlogPostEditViewModel

@{
    ViewBag.Title = "Edit";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('.datepicker').datepicker({
            autoclose: true,
        }); //Initialise any date pickers
 
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BlogPost</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Post.Id)
        @Html.HiddenFor(model => model.Post.TrelloId)

        <div class="form-group">
            @Html.LabelFor(model => model.Post.BlogId, "BlogId", htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Post.BlogId, Model.Blogs, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Post.BlogId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Post.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Post.AuthorId, Model.Authors, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Post.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Post.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Post.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Post.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Post.IsApproved, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Post.IsApproved)
                    @Html.ValidationMessageFor(model => model.Post.IsApproved, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Post.IsDoublePost, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Post.IsDoublePost)
                    @Html.ValidationMessageFor(model => model.Post.IsDoublePost, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Post.IsGhostwritten, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Post.IsGhostwritten)
                    @Html.ValidationMessageFor(model => model.Post.IsGhostwritten, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Post.AuthorPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Post.AuthorPay, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Post.AuthorPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
